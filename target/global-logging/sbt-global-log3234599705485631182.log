[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\tovy9\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\tovy9\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_231)
[debug]       Load.loadUnit: plugins took 142.1084ms
[debug]       Load.loadUnit: defsScala took 0.3938ms
[debug] [Loading] Scanning directory C:\Users\tovy9\.sbt\1.0\plugins
[debug]         Load.loadUnit: mkEval took 9.1569ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\tovy9\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.7853 ms
[info] loading settings for project global-plugins from idea.sbt ...
[debug]           Load.resolveProject(global-plugins) took 47.8935ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\tovy9\.sbt\1.0\plugins, plugins: List(<none>))) took 98.4355ms
[debug] [Loading] Done in C:\Users\tovy9\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 227.4335ms
[debug]       Load.loadUnit: cleanEvalClasses took 6.8539ms
[debug]     Load.loadUnit(file:/C:/Users/tovy9/.sbt/1.0/plugins/, ...) took 386.066ms
[debug]   Load.apply: load took 541.1606ms
[debug]   Load.apply: resolveProjects took 4.9055ms
[debug]   Load.apply: finalTransforms took 58.9251ms
[debug]   Load.apply: config.delegates took 7.157ms
[debug]   Load.apply: Def.make(settings)... took 1403.9462ms
[debug]   Load.apply: structureIndex took 133.0159ms
[debug]   Load.apply: mkStreams took 2.4444ms
[info] loading global plugins from C:\Users\tovy9\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5376.608ms
[debug]           Load.loadUnit: plugins took 41.8315ms
[debug]           Load.loadUnit: defsScala took 0.0063ms
[debug] [Loading] Scanning directory C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad\project
[debug]             Load.loadUnit: mkEval took 0.3921ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4056 ms
[info] loading settings for project typeclassfunctormonad-build from idea.sbt ...
[debug]               Load.resolveProject(typeclassfunctormonad-build) took 4.2495ms
[debug]             Load.loadTransitive: finalizeProject(Project(id typeclassfunctormonad-build, base: C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad\project, plugins: List(<none>))) took 7.3155ms
[debug] [Loading] Done in C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad\project, returning: (typeclassfunctormonad-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 85.7024ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.4233ms
[debug]         Load.loadUnit(file:/C:/Users/tovy9/Documents/IdeaProjects/Scala/TypeClassFunctorMonad/project/, ...) took 130.3099ms
[debug]       Load.apply: load took 132.2079ms
[debug]       Load.apply: resolveProjects took 0.1241ms
[debug]       Load.apply: finalTransforms took 11.8617ms
[debug]       Load.apply: config.delegates took 0.5316ms
[debug]       Load.apply: Def.make(settings)... took 97.7933ms
[debug]       Load.apply: structureIndex took 37.3368ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 591.7738ms
[debug]     Load.loadUnit: defsScala took 0.0054ms
[debug] [Loading] Scanning directory C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad
[debug]       Load.loadUnit: mkEval took 0.2257ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.4243 ms
[info] loading settings for project typeclassfunctormonad from build.sbt ...
[debug]         Load.resolveProject(typeclassfunctormonad) took 40.1986ms
[debug]       Load.loadTransitive: finalizeProject(Project(id typeclassfunctormonad, base: C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad, plugins: List(<none>))) took 45.0278ms
[debug] [Loading] Done in C:\Users\tovy9\Documents\IdeaProjects\Scala\TypeClassFunctorMonad, returning: (typeclassfunctormonad)
[debug]     Load.loadUnit: loadedProjectsRaw took 3160.3348ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.7142ms
[debug]   Load.loadUnit(file:/C:/Users/tovy9/Documents/IdeaProjects/Scala/TypeClassFunctorMonad/, ...) took 3767.48ms
[debug] Load.apply: load took 3769.3136ms
[debug] Load.apply: resolveProjects took 0.1513ms
[debug] Load.apply: finalTransforms took 29.7667ms
[debug] Load.apply: config.delegates took 0.47ms
[debug] Load.apply: Def.make(settings)... took 93.5648ms
[debug] Load.apply: structureIndex took 30.0927ms
[debug] Load.apply: mkStreams took 0.0025ms
[info] set current project to FunctorsAndMonads (in build file:/C:/Users/tovy9/Documents/IdeaProjects/Scala/TypeClassFunctorMonad/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55038 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55038, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to FunctorsAndMonads (in build file:/C:/Users/tovy9/Documents/IdeaProjects/Scala/TypeClassFunctorMonad/)
[debug] > Exec(idea-shell, None, None)
